import random
import traceback
from telebot import types, TeleBot
import time
import threading
import config
import telebot
import os


bot = TeleBot('1237272474:AAFe1tAKSCPynis6P160ksddVMWFuJ3P9gA')

users = {}
finders = []

config = {
        'base_text':'–ë–æ—Çüßù‚Äç‚ôÄ:\n!–ø–æ–º–æ—â—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–º–æ—â—å\n!—Å—Ç–æ–ø - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥\n!–Ω–æ–≤—ã–π - –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥\n!–ø–æ–∏—Å–∫ - –ø–æ–∏—Å–∫ –Ω–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞'
        }

def get_kb():
    kb = types.ReplyKeyboardMarkup()
    kb.add(types.KeyboardButton("!–ø–æ–∏—Å–∫"))
    kb.add(types.KeyboardButton("!—Å—Ç–æ–ø"))
    return kb

@bot.message_handler(commands=['start'])
def start(m):
    if m.from_user.id != m.chat.id:
        return
    kb = get_kb()
    
    hello_text = "–ù–∞–π–¥–∏ —Å–µ–±–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞!\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –Ω–∞–ø–∏—à–∏: !–ø–æ–∏—Å–∫\n–ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ –Ω–∞–ø–∏—à–∏: !—Å—Ç–æ–ø\n"+\
                  "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π –ø—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–∞—Ç–∞: vk.cc/av2Dau"
    bot.send_message(m.chat.id, hello_text, reply_markup = kb)
    
  
def createuser(user):
    return {
        user.id:{
            'name':user.first_name,
            'id':user.id,
            'companion':None
            }
        }
  
@bot.message_handler(func = lambda m: m.text != None and m.text.lower() in ['!–ø–æ–∏—Å–∫', '!—Å—Ç–æ–ø'])
def command(m):
    if m.text.lower() == '!–ø–æ–∏—Å–∫':
        if m.from_user.id in users:
            bot.send_message(m.chat.id, '–í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥–∏–∞–ª–æ–≥–µ –∏–ª–∏ –∏—â–µ—Ç–µ –µ–≥–æ!')
            return
            
        users.update(createuser(m.from_user))
        user = users[m.from_user.id]
        if len(finders) > 0:
            companion = users[finders[0]]
            finders.remove(companion['id'])
            user['companion'] = companion['id']
            companion['companion'] = user['id']
            bot.send_message(user['id'], '–ë–æ—Çüßù‚Äç‚ôÄ:\n–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω!')
            try:
                bot.send_message(companion['id'], '–ë–æ—Çüßù‚Äç‚ôÄ:\n–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω!')
            except:
                pass
        else:
            finders.append(user['id'])
            bot.send_message(user['id'], '–ë–æ—Çüßù‚Äç‚ôÄ:\n–í—ã –±—ã–ª–∏ –ø–æ–º–µ—â–µ–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å. –û–∂–∏–¥–∞–π—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...')
    
    elif m.text.lower() == '!—Å—Ç–æ–ø':
        if m.from_user.id not in users:
            bot.send_message(m.chat.id, '–í—ã –µ—â—ë –Ω–∏–∫–æ–≥–æ –Ω–µ –∏—â–µ—Ç–µ! –î–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞–ø–∏—à–∏—Ç–µ `!–ø–æ–∏—Å–∫`', parse_mode = 'markdown')
            return
            
        user = users[m.from_user.id]
        
        if user['id'] in finders:
            finders.remove(user['id'])
            bot.send_message(user['id'], '–ë–æ—Çüßù‚Äç‚ôÄ:\n–ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω—ë–Ω')
            bot.send_message(user['id'], config['base_text']) 
            del users[m.from_user.id]
            return
            
        if user['companion'] != None:
            try:
                bot.send_message(user['companion'], '–ë–æ—Çüßù‚Äç‚ôÄ:\n–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ —Ä–∞–∑–æ—Ä–≤–∞–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ!')
                bot.send_message(user['companion'], config['base_text'])
            except:
                pass
            del users[user['companion']]
            
        bot.send_message(user['id'], '–ë–æ—Çüßù‚Äç‚ôÄ:\n–î–∏–∞–ª–æ–≥ –∑–∞–∫–æ–Ω—á–µ–Ω')
        bot.send_message(user['id'], config['base_text'])    
        del users[m.from_user.id]
        
        
        
@bot.message_handler(content_types=['document'])
@bot.message_handler(content_types=['animations'])
@bot.message_handler(content_types=['text'])
@bot.message_handler(content_types=['sticker'])
@bot.message_handler(content_types=['photo'])
@bot.message_handler(content_types=['audio'])
@bot.message_handler(content_types=['voice'])
@bot.message_handler(content_types=['text'])
def texts(m):
    if m.from_user.id not in users:
        bot.send_message(m.chat.id, config['base_text'])
        return
    user = users[m.from_user.id]
    if user['companion'] == None:
        bot.send_message(m.chat.id, '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º—ã –∏—â–µ–º –≤–∞–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞!')
        return
    else:
        dialogue(m, user['companion'])

            
def dialogue(m, companion):
    if m.text != None:
        bot.send_message(companion, m.text)
    
    elif m.photo != None:
        bot.send_photo(companion, m.photo[-1].file_id, caption = m.caption)
        
    elif m.document != None:
        bot.send_document(companion, m.document.file_id, caption = m.document.caption)
        
    elif m.animation != None:
        bot.send_document(companion, m.animation.file_id, caption = m.animation.caption)
        
    elif m.sticker != None:
        bot.send_sticker(companion, m.sticker.file_id)
        
    elif m.audio != None:
        bot.send_audio(companion, m.audio.file_id, caption = m.audio.caption)
        
    elif m.voice != None:
        bot.send_voice(companion, m.voice.file_id)
            
        
